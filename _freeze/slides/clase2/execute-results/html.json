{
  "hash": "3a2c7d90e31cd83ae0c2f1c0cba1ccfa",
  "result": {
    "markdown": "---\ntitle: \"Laboratorio de datos\"\nsubtitle: \"[Licenciatura en Ciencia de Datos](https://lcd.exactas.uba.ar/)\"\nauthor: \"Guillermo Solovey\"\ninstitute: \"Instituto de Cálculo, UBA-CONICET\"\nformat:\n  revealjs:\n    theme: custom.scss\n    transition: fade\n    background-transition: fade\n    highlight-style: ayu-mirage\ncode-link: true\nexecute:\n  echo: true\n  freeze: auto\neditor: source\n---\n\n\n## Datos: \n\n![](./figs/clase2-numeros.png){fig-align=\"center\"}\n\n## Estadística descriptiva\n\n\n::: {.callout-note appearance=\"simple\"}\nResumir \n:::\n\n## Tres ideas\n\n- distribución\n- medidas de centralidad\n- medidas de variabilidad\n\n\n## Medidas de centralidad\n\n- resumir en un único número!\n- Moda\n  - ` 1 1 1 2 3 4 5 6 ` \n  - ` 1 1 1 2 2 2 5 6 ` \n  - ¿es buena la moda? ` 1 1 2 3 4 6 7 9 ` \n- Mediana\n  - ` 1 3 4 5 6 7 9 ` \n  - ` 1 5 4 3 6 7 9 ` \n  - ` 1 2 3 4 5 6 ` \n  - ¿es buena la mediana? ` 1 2 3 4 4 4 5 6 6 6 7 7 1000 `\n- Media (promedio)\n  - $\\frac{1}{n}\\sum_i^n x_i$\n  - `3 7 9 2 6`\n  \n  \n## Medidas de centralidad\n\n- ejemplo de histograma con media, mediana y moda.\n- la mediana y la moda son insensibles a valores atípicos (por ejemplo valores extremos que son poco frecuentes0).\n\n\n## Medidas de variabilidad\n\n- mostrar que el promedio de distancias abs no sirve\n- varianza: sum de sq diff / n\n- The mean is the balancing point in the data\n- sd = sqrt(varianza)\n\n## Cuarteto de Anscombe\n\n::: {.panel-tabset}\n\n## Plot\n\n::: {.cell}\n::: {.cell-output-display}\n![](clase2_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## Resumen\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic lightable-striped\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; width: auto !important; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> quartet </th>\n   <th style=\"text-align:center;\"> mean_x </th>\n   <th style=\"text-align:center;\"> var_x </th>\n   <th style=\"text-align:center;\"> mean_y </th>\n   <th style=\"text-align:center;\"> var_y </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;font-weight: bold;\"> 1 </td>\n   <td style=\"text-align:center;\"> 9 </td>\n   <td style=\"text-align:center;\"> 11 </td>\n   <td style=\"text-align:center;\"> 7.5 </td>\n   <td style=\"text-align:center;\"> 4.13 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;font-weight: bold;\"> 2 </td>\n   <td style=\"text-align:center;\"> 9 </td>\n   <td style=\"text-align:center;\"> 11 </td>\n   <td style=\"text-align:center;\"> 7.5 </td>\n   <td style=\"text-align:center;\"> 4.13 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;font-weight: bold;\"> 3 </td>\n   <td style=\"text-align:center;\"> 9 </td>\n   <td style=\"text-align:center;\"> 11 </td>\n   <td style=\"text-align:center;\"> 7.5 </td>\n   <td style=\"text-align:center;\"> 4.12 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;font-weight: bold;\"> 4 </td>\n   <td style=\"text-align:center;\"> 9 </td>\n   <td style=\"text-align:center;\"> 11 </td>\n   <td style=\"text-align:center;\"> 7.5 </td>\n   <td style=\"text-align:center;\"> 4.12 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: \n\n## Cuarteto de Anscombe\n\n::: {.callout-important}\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::\n",
    "supporting": [
      "clase2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}