[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Laboratorio de Datos",
    "section": "",
    "text": "Profesor: Guillermo Solovey.\nAyudantes: Dario Elías y Yamila Alen.\nHorario: Viernes de 10 a 13 y de 14 a 17.\nClases: desde el 18 de Agosto al 1 de Diciembre.\nLaboratorio: 1103.\n\n\n\n Exactas-UBA\n\n\n Licenciatura en Ciencia de Datos"
  },
  {
    "objectID": "cronograma.html",
    "href": "cronograma.html",
    "title": "Cronograma",
    "section": "",
    "text": "fecha\n      tema\n      slides\n      guias\n      tp\n    \n  \n  \n    18/8\nIntroducción a la materia. Ciencia de datos. Tipos de preguntas. Introducción a R y RStudio | Charla Dátame.\n\n\n\n    25/8\nEstadística descriptiva. Visualización. Gramática de gráficos.\n\n\n\n    1/9\nAnálisis exploratorio de datos y comunicación.\n\n\n\n    8/9\nTransformación de datos: datos ordenados, vectores, data frames. Unión de data frames.\n\n\n\n    15/9\nProgramación en R: funciones, iteraciones | Charla Dátame.\n\n\n\n    22/9\nReproducibilidad computacional. Comunicación e informes con RMarkdown/Quarto.\n\n\nPresentación TP1\n    29/9\nIntroducción al modelado. Modelos supervisados y no supervisados. Regresión vs. clasificación. Trade-off sesgo-varianza. Modelo de regresión lineal simple.\n\n\nConsultas TP1\n    6/10\nRegresión: regresión lineal múltiple y K-nearest neighbors.\n\n\nEnvío TP1 (límite: 5 de Oct, 23:59)\n    13/10\nFeriado\n\n\n\n    20/10\nClasificación: Árboles de decisión y K-nearest neighbors | Charla Dátame.\n\n\nDevolución TP1\n    27/10\nHerramientas de validación de un\nmodelo. Métodos de resampleo. Muestras de testeo y entrenamiento.Métricas\n\n\nPresentación TP2\n    3/11\nAprendizaje no supervisado. Métodos de clustering: K-means y clustering jerárquico.\n\n\nConsultas TP2\n    10/11\nConsultas.\n\n\nEnvío TP2 (límite: 9 de Nov, 23:59)\n    17/11\nParcial de 10 a 13hs en aula a confirmar | Charla Dátame.\n\n\n\n    24/11\nEntrega de notas del parcial y TP2. Cierre\n\n\n\n    1/12\nRecuperatorio del parcial, de 10 a 13hs en aula a confirmar.\n\n\nRe-entrega de TPs.\n    8/12\nEntrega de notas del recuperatorio y de los TPs. Cierre."
  },
  {
    "objectID": "index.html#course-materials",
    "href": "index.html#course-materials",
    "title": "Estimación Bayesiana",
    "section": "Course materials",
    "text": "Course materials\n\nBooks\nWe’ll be working through two textbooks throughout the semester:\n\nRichard McElreath, Statistical Rethinking: A Bayesian Course with Examples in R and Stan\n\n\n\n\nAlicia A. Johnson, Miles Q. Ott, and Mine Dogucu, Bayes Rules! An Introduction to Applied Bayesian Modeling\n\n\n\nBayes Rules! is available online for free. The book for Statistical Rethinking is not free ($70 on Amazon), but Richard McElreath has provided 20 video lectures with accompanying slides and homework assignments and answer keys.\nWe’ll read all of Bayes Rules!, all of Statistical Rethinking, watch all of McElreath’s Statistical Rethinking lectures, and complete a bunch of the assignments and homework questions from both books.\n\nDocente\n\nDocente: Dr. Guillermo Solovey\nOficina: 2605, Edificio Cero+Infinito, Exactas-UBA\n\n\n\nFechas\n\nInscripción: Primer cuatrimestre 2023. Inicio de clases: semana del 20 de Marzo.\nDictado: Primer cuatrimestre 2023. Inicio de clases: semana del 20 de Marzo.\nHorarios: 4 horas semanales en días y horario a definir.\n\n\n\nCorrelativas\n\nIntroducción a la Estadística y la Ciencia de Datos.\n\n\n\nCódigo de inscripción en el SIU\n\nGrado: a definir\nDoctorado: a definir\n\n\n\nBibliografía\n\nVamos a usar principalmente Bayes Rules! y Statistical Rethinking.\n\n\n\n Instituto de Cálculo\n\n\n Facultad de Ciencias Exactas y Naturales, UBA"
  },
  {
    "objectID": "programa.html",
    "href": "programa.html",
    "title": "Programa",
    "section": "",
    "text": "próximamente…"
  },
  {
    "objectID": "programa.html#bibliografía",
    "href": "programa.html#bibliografía",
    "title": "Programa",
    "section": "Bibliografía",
    "text": "Bibliografía\nprincipal:\n\nAlicia A. Johnson, Miles Q. Ott, and Mine Dogucu, Bayes Rules! An Introduction to Applied Bayesian Modeling\nRichard McElreath, Statistical Rethinking: A Bayesian Course with Examples in R and Stan, 2nd edition.\n\n\ncomplementaria:\n\nBen Lambert, A Student’s Guide to Bayesian Statistics.\nOsvaldo A. Martin, Ravin Kumar y Junpeng Lao, Bayesian Modeling and Computation in Python.\nPeter D. Hoff, A first course in Bayesian statistical methods.\nCameron Davidson-Pilon, Bayesian methods for hackers: probabilistic programming and Bayesian inference.\nDavid Robinson, Introduction to empirical bayes: examples from baseball statistics.\nAndrew Gelman, Jennifer Hill, and Aki Vehtari, Regression and other stories."
  },
  {
    "objectID": "programa.html#programa",
    "href": "programa.html#programa",
    "title": "Programa",
    "section": "Programa",
    "text": "Programa\n\nUnidad 1\nFundamentos bayesianos: Aprender cómo pensar bayesianamente y cómo crear modelos bayesianos básicos.\nIntroducción a la estadística bayesiana. Diferencias entre estadística bayesiana y frecuentista. Pensar bayesianamente. Modelo beta-binomial. Equilibrio entre el prior y los datos. Análisis bayesiano secuencial. Familias conjugadas.\n\n\nUnidad 2\nSimulación y análisis de la distribución posterior: Herramientas computacionales para simular la distribución posterior en modelos bayesianos complejos.\nAnalizar modelos simulados y exactos para hacer inferencia y sacar conclusiones. Aproximar la distribución posterior. Método de grilla, Metrópolis-Hastings y Markov Chain Monte Carlo (MCMC). Implementación y diagnóstico en R. Estimación de parámetros Testeo de hipótesis. Predicción.\n\n\nUnidad 3\nModelos bayesianos de regresión y clasificación: Extender los modelos bayesianos a casos en los que la variable respuesta es contínua (regresión) y categórica (clasificación).\nRegresión Normal. Regresión múltiple. Variables de control y confusoras. Evaluación, diagnóstico y comparación de modelos de regresión. Regresión de Poisson. Naive-Bayes. Regresión logística.\n\n\nUnidad 4\nModelos bayesianos jerárquicos: Modelos bayesianos para datos multi-nivel, como datos longitudinales y de medidas repetidas.\nModelo complete-pool y no-pool. Modelos de pooling parcial. Modelo jerárquico normal sin predictores. Modelos de regresión y clasificación jerárquicos."
  },
  {
    "objectID": "index.html#docente",
    "href": "index.html#docente",
    "title": "Estimación Bayesiana",
    "section": "Docente",
    "text": "Docente\n\nDocente: Dr. Guillermo Solovey\nOficina: 2605, Edificio Cero+Infinito, Exactas-UBA"
  },
  {
    "objectID": "index.html#fechas",
    "href": "index.html#fechas",
    "title": "Estimación Bayesiana",
    "section": "Fechas",
    "text": "Fechas\n\nInscripción: desde el 22 de Febrero al 5 de Marzo de 2023.\nDictado: Primer cuatrimestre 2023. Inicio de clases: semana del 20 de Marzo.\nHorarios: 4 horas semanales en días y horario a definir."
  },
  {
    "objectID": "index.html#correlativas",
    "href": "index.html#correlativas",
    "title": "Estimación Bayesiana",
    "section": "Correlativas",
    "text": "Correlativas\n\nIntroducción a la Estadística y la Ciencia de Datos.\n\n\n\n Instituto de Cálculo\n\n\n Facultad de Ciencias Exactas y Naturales, UBA"
  },
  {
    "objectID": "index.html#código-de-inscripción-en-el-siu",
    "href": "index.html#código-de-inscripción-en-el-siu",
    "title": "Estimación Bayesiana",
    "section": "Código de inscripción en el SIU",
    "text": "Código de inscripción en el SIU\n\nGrado: a definir\nDoctorado: a definir"
  },
  {
    "objectID": "index.html#bibliografía",
    "href": "index.html#bibliografía",
    "title": "Estimación Bayesiana",
    "section": "Bibliografía",
    "text": "Bibliografía\n\n?var:course.text\n\n\n\n Instituto de Cálculo\n\n\n Facultad de Ciencias Exactas y Naturales, UBA"
  },
  {
    "objectID": "programa.html#régimen-de-aprobación",
    "href": "programa.html#régimen-de-aprobación",
    "title": "Programa",
    "section": "Régimen de aprobación",
    "text": "Régimen de aprobación\nLa materia tiene 4 entregas. La nota final de la materia se compone así - 1a entrega: 20% - 2a entrega: 20% - 3a entrega: 20% - 4a entrega: 40%"
  },
  {
    "objectID": "programa.html#entregas",
    "href": "programa.html#entregas",
    "title": "Programa",
    "section": "Entregas",
    "text": "Entregas\nCada entrega tiene una fecha límite que es dos semanas después de la clase (ver cronograma). No aceptamos entregas sin aviso después de ese día. Antes de la fecha límite se puede pedir una prórroga de 1 semana, pero eso sólo se puede hacer 1 vez en todo el curso. Las entregas: sin código y cómo enviar entregas: G1-E1-APELLIDO-NOMBRE.PDF"
  },
  {
    "objectID": "programa.html#trabajo-final",
    "href": "programa.html#trabajo-final",
    "title": "Programa",
    "section": "Trabajo final",
    "text": "Trabajo final\nLa última entrega consiste de un trabajo final…"
  },
  {
    "objectID": "pautas.html",
    "href": "pautas.html",
    "title": "Pautas",
    "section": "",
    "text": "El trabajo a lo largo de este curso consiste en elegir un conjunto de datos, realizar un análisis adecuado del mismo utilizando al menos dos técnicas aprendidas durante la carrera de especialización y redactar un informe final."
  },
  {
    "objectID": "pautas.html#organización",
    "href": "pautas.html#organización",
    "title": "Pautas",
    "section": "Organización",
    "text": "Organización\nEl curso está dividido en 4 grupos. Cada grupo asiste a una clase presencial por mes los días martes a las 19.30 horas. Durante las clases presenciales Guillermo Solovey y Gustavo Juantorena explicarán las pautas de los trabajos prácticos a entregar durante el curso y ayudarán a cada uno a conseguir el objetivo. El resto de la semana y para aquellos que no asistan presencial ese día, Jazmín Vidal responderá consultas de forma asincrónica. La presencialidad NO es opcional.\nLas consultas se realizan escribiendo a tallerdetesis1-2023@googlegroups.com. Pueden consultar el cronograma de asistencia por grupo acá."
  },
  {
    "objectID": "pautas.html#régimen-de-aprobación",
    "href": "pautas.html#régimen-de-aprobación",
    "title": "Pautas",
    "section": "Régimen de aprobación",
    "text": "Régimen de aprobación\nLa materia tiene 4 entregas (3 entregas parciales y un trabajo final) y se aprueba con 65 puntos. La nota final de la materia se compone así:\n\nEntrega 1: 20 puntos\nEntrega 2: 20 puntos\nEntrega 3: 20 puntos\nTrabajo final: 40 puntos\n\nLas consignas para las entregas y del trabajo final se explican los días martes en la clase presencial de cada grupo. Cada entrega tiene una fecha límite que es dos semanas después de la clase. Tener en cuenta que las entregas son incrementales, esto es, que cada una depende de la anterior y culmina en el trabajo final.\nEn caso de entregar con retraso, el trabajo tendrá una puntuación menor. Los trabajos entregados hasta una semana después de la fecha límite tendrán 5 puntos menos de puntaje máximo. Los trabajos entregados con más de una semana de atraso tendrán 10 puntos menos de nota máxima.\nLas entregas se cargan en una carpeta de google drive. Hay una carpeta para cada entrega y para cada grupo. Las entregas deben enviarse en PDF, sin código adjunto y con el nombre: G1-E1-APELLIDO-NOMBRE.PDF\nPueden consultar el cronograma de entregas acá."
  },
  {
    "objectID": "pautas.html#uso-de-datos",
    "href": "pautas.html#uso-de-datos",
    "title": "Pautas",
    "section": "Uso de datos",
    "text": "Uso de datos\nPueden encontrar pautas generales para la elección del dataset en este documento. En general, pueden utilizar:\n\nDatos públicos: sugerimos la utilización de uno de los datasets provistos en la siguiente lista. Si el dataset es muy popular y ya hay en internet muchos trabajos hechos, se deberá reportar cómo el trabajo a realizar difiere de ellos.\nDatos propios: si se deseara realizar las entregas y el informe final utilizando un conjunto de datos propio, se deberá contar -ANTES DE LA PRIMERA ENTREGA- con autorización para hacerlo. De lo contrario tendrán que utilizar un conjunto de datos públicos como los sugeridos en el ítem anterior.\nDatos scrapeados: datos visibles en una web no necesariamente significa que los podemos scrapear para los fines de este trabajo. Cada página tiene sus condiciones de uso de datos. Sólo se pueden scrapear los datos si está permitido hacerlo."
  },
  {
    "objectID": "pautas.html#otros-recursos",
    "href": "pautas.html#otros-recursos",
    "title": "Pautas",
    "section": "Otros recursos",
    "text": "Otros recursos\nEjemplos de trabajos de años anteriores\n\nDetección de cataratas y glaucoma en imágenes de fondo de ojo. Hernán Estrin\nPatrones de uso del servicio de datos en la red de telefonía móvil de la ciudad de Milán. Horacio Gastón Arrigo"
  },
  {
    "objectID": "pautas.html#preguntas-frecuentes",
    "href": "pautas.html#preguntas-frecuentes",
    "title": "Pautas",
    "section": "Preguntas frecuentes",
    "text": "Preguntas frecuentes\n\n¿Qué diferencia hay entre el trabajo de especialización y el trabajo final de esta materia?\nPoco. Si cumplen con los objetivos de esta materia y hacen todas las entregas de forma completa, van a estar a un paso del trabajo de especialización. Podrían quedar algunas cositas por pulir, pero nada que les impide entregarlo pocas semanas después de finalizada la materia.\n¿Quién evalúa el trabajo de especialización?\nEn esta materia, los docentes no evaluamos los trabajos finales de especialización pero los preparamos para entregarlo. El trabajo de especialización lo evalúan docentes del posgrado.\n¿Qué diferencia hay entre el trabajo de especialización y la tesis de maestría?\nEl trabajo de tesis de maestría requiere director/a, se espera que sea más extenso que el de especialización.\n¿Es requisito hacer el trabajo de especialización si quiero seguir con la maestría?\nNo. Se puede aprobar esta materia con todos sus requisitos y continuar hacia la maestría.\n¿Necesito tutor/director para hacer el trabajo de especialización?\nNo.\n¿En qué formato hay que escribir el trabajo final?\nEl que les resulte más cómodo. Puede ser overleaf, Rmd, google docs, Word, … pero el entregable tiene que estar en pdf."
  },
  {
    "objectID": "pautas.html#chat-gpt",
    "href": "pautas.html#chat-gpt",
    "title": "Pautas",
    "section": "Chat GPT",
    "text": "Chat GPT\nLe preguntamos a Chat GPT como realizar un uso creativo del mismo a lo largo del curso y, entre otras cosas, lo que nos dijo fue:\n\n\n\n\n\n\nImportante!\n\n\n\nRecuerda que, aunque Chat GPT puede ser una herramienta útil para ayudarte en tu trabajo final de ciencia de datos, es importante que tú mismo/a te asegures de la calidad de la información y de los resultados obtenidos. ¡Buena suerte en tu proyecto!"
  },
  {
    "objectID": "datasets.html",
    "href": "datasets.html",
    "title": "Datasets",
    "section": "",
    "text": "Como sugerencia general, elijan un dataset sobre un tema que les interese o sobre el que están trabajando actualmente. Como algunos conjuntos de datos se han usado en exceso para estos objetivos particulares, tenga en cuenta que los siguientes están prohibidos en este trabajo (se pueden agregar más a esta lista, así que asegúrense de revisarla regularmente):\n\ntitanic\nmtcars\niris\nMNIST\nCIFAR-10\n\nLo mejor es usar un conjunto de datos para el cual no haya un análisis listo en Internet, pero si eligen un conjunto de datos que ya se usó en algún estudio de caso disponible online, proporcionen el enlace a estudios anteriores e informen cómo sus análisis difieren de esos (por ejemplo, si alguien ha realizado un análisis no bayesiano y ustedes realizan el análisis bayesiano completo).\nSegún el modelo y la estructura de los datos, un buen dataset tendría más de 100 observaciones pero menos de 1 millón. Si conocen un dataset interesante pero muy pesado, pueden usar un subconjunto más pequeño de los datos para mantener factibles los tiempos de cálculo."
  },
  {
    "objectID": "datasets.html#inspiración",
    "href": "datasets.html#inspiración",
    "title": "Datasets",
    "section": "Inspiración",
    "text": "Inspiración\nSi están buscando inspiración o no están seguros de por dónde empezar, pueden mirar las siguientes páginas:\n\nhttps://datasetsearch.research.google.com/\nhttps://www.kaggle.com/datasets\nhttps://github.com/rfordatascience/tidytuesday\nhttps://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research\nhttps://paperswithcode.com/datasets\nhttps://www.openml.org/search?type=data&sort=runs&status=active"
  },
  {
    "objectID": "datasets.html#dónde-encontrar-papers",
    "href": "datasets.html#dónde-encontrar-papers",
    "title": "Datasets",
    "section": "¿Dónde encontrar papers?",
    "text": "¿Dónde encontrar papers?\n\nhttps://scholar.google.com/\nhttps://pubmed.ncbi.nlm.nih.gov/\nhttps://ieeexplore.ieee.org/Xplore/home.jsp"
  },
  {
    "objectID": "datasets.html#ejemplos-de-datasets",
    "href": "datasets.html#ejemplos-de-datasets",
    "title": "Datasets",
    "section": "Ejemplos de datasets",
    "text": "Ejemplos de datasets\nAlgunos ejemplos específicos que pueden usar según la técnica de análisis están en el siguiente documento."
  },
  {
    "objectID": "consignas.html",
    "href": "consignas.html",
    "title": "Consignas",
    "section": "",
    "text": "Para ver el cronograma de entregas, ver acá."
  },
  {
    "objectID": "consignas.html#entrega-1-dataset-pregunta-y-objetivo",
    "href": "consignas.html#entrega-1-dataset-pregunta-y-objetivo",
    "title": "Consignas",
    "section": "Entrega 1: Dataset, pregunta y objetivo",
    "text": "Entrega 1: Dataset, pregunta y objetivo\nConsigna para la entrega 1."
  },
  {
    "objectID": "consignas.html#entrega-2-metodología-y-análisis-exploratorio-de-datos",
    "href": "consignas.html#entrega-2-metodología-y-análisis-exploratorio-de-datos",
    "title": "Consignas",
    "section": "Entrega 2: Metodología y análisis exploratorio de datos",
    "text": "Entrega 2: Metodología y análisis exploratorio de datos\nConsigna para la entrega 2."
  },
  {
    "objectID": "consignas.html#entrega-3-introducción-y-resultados",
    "href": "consignas.html#entrega-3-introducción-y-resultados",
    "title": "Consignas",
    "section": "Entrega 3: Introducción y resultados",
    "text": "Entrega 3: Introducción y resultados\nConsigna para la entrega 3."
  },
  {
    "objectID": "consignas.html#trabajo-final",
    "href": "consignas.html#trabajo-final",
    "title": "Consignas",
    "section": "Trabajo final",
    "text": "Trabajo final\nLa última entrega consiste en sumarle “Discusión y conclusiones” a lo hecho en las entregas anteriores, lo que constituye el trabajo final de la materia.\nConsigna para el trabajo final."
  },
  {
    "objectID": "tps.html",
    "href": "tps.html",
    "title": "Trabajos Prácticos",
    "section": "",
    "text": "Próximamente…"
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "Slides",
    "section": "",
    "text": "clase 1 - 18/8\nclase 2 - 25/8"
  },
  {
    "objectID": "TPs/TP1.html",
    "href": "TPs/TP1.html",
    "title": "Trabajo Práctico 1",
    "section": "",
    "text": "El objetivo de estos ejercicios es reconocer, crear y hacer operaciones simples con los 5 tipos de objetos básicos de R:\n\ncharacter\nnumeric (números reales)\ninteger\ncomplex\nlogical (True/False)\n\nTambién familiarizarse con la consola de R, con matrices y con operaciones lógicas.\n1.1 Realizar las siguientes operaciones básicas en la consola\n\n2+2\na <- 2\nb <- 5\na**3\n16 %% 5 (probar con otros números para entender qué significa)\n2*a**2+0.5*b+(a+b)/2\nasignar el resultado anterior a la variable c\nimprimir el contenido de c en la consola (corriendo c o print(c)). ¿Ven un [1] delante del valor de c? Esto indica que es un vector.\n\n1.2 Interpretar las siguientes operaciones lógicas y predecir el resultado antes de probar en la consola.\n\na <- TRUE\nb <- FALSE\na == b\na || b\na == !b\n\n1.3. Antes de probar en la consola, piense que van a dar estas operaciones:\n\na <- 3\nb <- 4\na > b\na <= b\na != b\nx <- 2\n(x > a) && (10*x>b) || !(b/a>x)\n\n1.4 Los vectores en R se crean con la función c(). Por ejemplo c(2,-1) es un vector de clase numeric que tiene dos elementos, el 2 y el -1. Se puede comprobar usando la función class() así: class(c(2,-1)). Crear 5 vectores de 2 componentes de las siguiente clases básicas: character, numeric, integer, complex y logical (True/False).\n1.5. ¿Qué sucede cuando se realizan las siguientes operaciones que mezclan variables de distinta clase? ¿Por qué les parece que pasa? (usar class() para investigar el tipo de dato de los objetos)\n\nnum_char <- c(1, 2, 3, \"a\")\nnum_logical <- c(1, 2, 3, TRUE)\nchar_logical <- c(\"a\", \"b\", \"c\", TRUE)\ntramposo <- c(1, 2, 3, \"4\")\n\n1.6. Realizar las siguientes operaciones en la consola, ver el output de cada operación y escribir una frase explicando qué hace cada una.\n\nalturas_cm <- c(180, 178, 154, 202)\nfrutas <- c(\"banana\", \"pera\", \"durazno\")\nlength(alturas_cm)\nlength(frutas)\nfrutas <- c(frutas, \"uva\")\nfrutas <- c(\"naranja\", frutas)\nbajitos <- (alturas_cm < 165)\nclass(bajitos)\n1:10\n21:30\n\n1.7. Explorar estas distintas formas de extraer información del vector c(\"banana\", \"pera\", \"durazno\", \"anana\"). Primero crear el vector en la consola y asignarlo al vector frutas. Luego correr cada caso en la consola y explicar en pocas palabras qué es lo que sucede.\n\nfrutas[2]\nfrutas[c(1,4)]\nfrutas[c(1,4,1,1,2)]\nfrutas %in% c(\"ciruela\", \"frutilla\", \"pera\", \"mandarina\")\nfrutas[ frutas %in% c(\"ciruela\", \"frutilla\", \"pera\", \"mandarina\") ]\n\n1.8. ¿Por qué da error la línea 4 de esta secuencia?\n\ndatos <- c(\"banana\", 2, \"pera\", 5, \"durazno\", 0)\ndatos[2] \ndatos[4]\ndatos[2] + datos[4]\n\n1.9. Explorar distintas formas de extraer información del vector alturas_cm definido en el ejercicio 1.6. Escribir una frase explicando qué hace cada una. ¿Por qué la última retorna numeric(0)?\n\nalturas_cm[c(TRUE, FALSE, TRUE, TRUE)]\nalturas_cm[alturas_cm >= 180]\nalturas_cm[alturas_cm >= 180 & alturas_cm < 200]\nalturas_cm[alturas_cm >= 160 & alturas_cm == 195]\n\n1.10. Las matrices en R son vectores con estructura en 2D. Por ejemplo, se pueden crear de esta forma\n\nm <- matrix(1:6, nrow = 2, ncol = 3)\n\nUsar dim(m) para averiguar el atributo “dimesión” (número de filas y columnas) de la matriz. Obtener el elemento que está en la fila 2 y columna 1 usando corchetes: m[fila,columna]. Obtener la primera fila completa dejando en blanco la columna: m[fila,].\n1.11 ¿Qué sucede con m si corremos en la consola la operación dim(m) <- c(1, 6)?\n1.12 Construir una matriz de 2 columnas que en cada columna tenga los vectores x e y de abajo usando la función cbind() y otro que haga lo mismo pero con 2 filas usando la función rbind():\n\nx <- c(\"fruta\", \"asado\", \"bebida\")\ny <- c(\"si\", \"no\", \"si\")"
  },
  {
    "objectID": "TPs/TP1.html#funciones",
    "href": "TPs/TP1.html#funciones",
    "title": "Trabajo Práctico 1",
    "section": "2. Funciones",
    "text": "2. Funciones\nLas funciones son scripts de R “enlatados” que hacen una operación con un input (un número o una variable, por ejemplo) y devuelven un output. Los inputs van entre paréntedis y separados por una coma, si hay más de uno. Muchas funciones están disponibles en R-base cuando abrimos una sesión de R, class(), length() o c() que usamos en los ejercicios anteriores. El objetivo de estos ejercicios es familiarizarse con varias funciones básicas de R.\n2.1. Ejecutar estas operaciones en la consola para entender qué hacen las funciones sqrt(), round(), args(), ceiling() y floor():\n\nsqrt(81)\nround(3.14159, digits = 3)\nround(3.14159)\nround(digits = 2, 3.14159)\nargs(sample)\n?ceiling y ?floor\n\n2.2 Explorar las funciones max(), min(), mean() y sort() aplicadas al vector alturas_cm del ejercicio 1.6. ¿Qué hace cada una?\n2.3 Usar las funciones which.min() y which.max() con el mismo vector de alturas. Interpretar qué hace cada una.\n2.4. Completar los blancos con distintos números para entender qué hacen las funciones seq() y rep(). Si hay dudas, ?rep y ?seq en la consola.\n\nseq(from = ___, to = ___, lenght.out = ___)\nrep(x = ___, times = ___)\n\n2.5 Reproducir estos usos de la función sample() en la consola e interpretar qué hace esta función.\n\nsample(x = c(\"frambuesa\", \"frutilla\"), size = 7, replace = TRUE )\nsample(x = c(0,1), size = 7, replace = TRUE )\ninventar otros 2 usos de la función sample().\n\n2.6 ¿Por qué da error esta operación?\n\nsample(x = c(-1,1), size = 3)\n\n2.7 Usar la función sum() para sumar los números del 1 al 100 inclusive.\n2.8 R está pensado para analizar datos, entonces tiene formas particulares de tratar datos faltantes. Explorar en la consola el output de estas líneas de código. ¿Qué significa na.rm = TRUE?\n\nn <- c(2, 4, 4, NA, 6)\nmean(n)\nmax(n)\nmean(n, na.rm = TRUE)\nmax(n, na.rm = TRUE)\n\n2.9 A partir de este vector de pesos en Kg de distintas personas:\n\npeso_kg <- c(63, 69, 60, 65, NA, 68, 61, 70, 61, 59, 64, 69, 63, 63, NA, 72, 65, 64, 70, 63, 65)\n\n\nConstruir otro vector que descarte los NA.\nUsar la función mean() para calcular el peso promedio.\nEscribir una línea código que calcule cuántas personas pesan más que 65 kg.\nEscribir una línea de código que calcule cuántas personas pesan 63 kg.\n\n2.10 Usar la función sample() para simular el resultado de tirar un dado.\n2.11 Simular el resultado de tirar 120 veces un dado y contar cuántas veces salió cada resultado. ¿Qué resultado esperás obtener? ¿Coincide el resultado con lo que esperabas? No hay una única forma de resolverlo. Ayuda: sum(___ == x) o averigue cómo se usa la función table().\n2.12 Usar la función sample() para simular el resultado de tirar una moneda cargada, cuya probabilidad de salir cara es 0.7. Ayuda: ver cómo el argumento prob en ?sample."
  },
  {
    "objectID": "TPs/TP1.html#scripts",
    "href": "TPs/TP1.html#scripts",
    "title": "Trabajo Práctico 1",
    "section": "3. Scripts",
    "text": "3. Scripts\nTrabajar en la consola no siempre es lo más conveniente. Lo ideal es escribir en el editor de RStudio un archivo .R (o bien un archivo RMarkdown como veremos más adelante).\n3.1 Crear un script de R que haga la siguientes tres operaciones y guardarlo en un archivo llamado TP1-01.R. Correrlo línea por línea.\n\nx1 <- 2  # defino la variable x1\nx2 <- 3  # defino la variable x2\ny <- x1 + 2*x2\ny\n\n3.2 Crear un script que contenga la resolución completa del ejercicio 2.9. Incluir el enunciado y comentarios en el código. Guardarlo en un archivo “.R”."
  },
  {
    "objectID": "TPs/TP1.html#data-frames",
    "href": "TPs/TP1.html#data-frames",
    "title": "Trabajo Práctico 1",
    "section": "4. Data frames",
    "text": "4. Data frames\nUn data frame es una representación de los datos en formato de tabla en la que cada columna son vectores del mismo tamaño. Como cada columna es un vector, cada columna puede contener datos de un único tipo (ejemplo: numeric, character, factor, logic, etc). Se pueden pensar como variables. Por ejemplo:\nd <-  data.frame(x = 1:5, y = letters[1:5], z = c(T,T,F,T,F))\n4.1. ¿Cuál es la clase del objeto d? ¿Cuál es la clase de cada uno de los vectores columna?\n4.2. Extraer el vector columna y usando $. Comparar con usar d[,2].\n4.3. Cargar el paquete de R gapminder usando library(gapminder). Si da error es posible que no esté instalado. En tal caso ejecutan install.packages(\"gapminder\") en la consola y luego si library(gapminder).\n4.4. ¿Qué variables tiene el dataset gapminder y de qué clase son? Ayuda: usar la función head(gapminder) y/o str(gapminder). Este dataset tiene formato tibble que a los efectos prácticos en este punto es exactamente igual que un data frame.\n4.5. ¿De cuántos países hay datos? Ayuda: averiguar qué hace la función unique().\n4.6 Explorar el tamaño del dataset gapminder usando las funciones dim(), nrow() y ncol().\n4.7 ¿Cuáles son las variables? Usar la función names().\n4.8 Extraer la información de Argentina, Uruguay y Chile y guardarla en un nuevo data frame gm.sur. ¿Cuántas filas tiene? ¿Cuál es el primero y el último año para el cuál existen datos de Argentina en gapminder?\n4.9 ¿Qué resulta de hacer gm.sur[,\"pop\"]? ¿Qué resulta de hacer gm.sur[,-(1:3)]? Explorar el contenido de este data frame en el visor de RStudio haciendo View(gm.sur)\n4.10 Las variables de clase “factor” (factores, o fct) son una clase especial que tiene R para trabajar con variables categóricas. Una vez que se crean, los factores sólo pueden contener un conjunto pre-definido de valores que se conocen como los niveles del factor. ¿Qué variables del dataset de gapminder son factores?\n4.11 Redefinir niveles. Supongamos que queremos cambiar la denominación del continente de Argentina a “América” (sin la s final). Prueben lo siguiente. ¿Qué pasó? ¿Por qué no funciona?\n\nclass(gm.sur$continent)\ngm.sur$continent <- \"America\"\nclass(gm.sur$continent)\n\nAhora prueben esto. ¿Entienden por qué funciona?\n\nlevels(gm.sur$continent) <- c(\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\")\nclass(gm.sur$continent)\nhead(gm.sur)\n\n4.12. Vamos a usar mucho “factores” a lo largo del curso, pero para que se den una idea, por ejemplo, los factores son muy útiles para codificar variables categóricas en gráficos. Vamos a ver esto bastante a lo largo de las clases, pero para que vean una aplicación simple, corran estas líneas usando el paquete (que vamos a ver en las próximas clases) ggplot2.\n\nlibrary(ggplot2)\n\nggplot(data = gm.sur, \n       mapping = aes(x = year, y = pop, col = country)) +\n  geom_point(size = 3) +\n  theme_classic()\n\nAhora corran lo siguiente. ¿En qué difiere del anterior? ¿Pueden intuir por qué tenemos ese resultado?\n\nggplot(data = gm.sur, \n       mapping = aes(x = year, y = pop, size = country)) +\n  geom_point() +\n  theme_classic()\n\n¿Y si reemplazan size por shape dentro de aes(...)?\n4.13. Cambien más cosas del código anterior y prueben el resultado. De hecho, cambiar cosas y ver qué pasa es una gran forma de aprender."
  },
  {
    "objectID": "guias.html",
    "href": "guias.html",
    "title": "Guías",
    "section": "",
    "text": "Guía 1\nGuía 2\nGuía 3"
  },
  {
    "objectID": "guias/guia1.html",
    "href": "guias/guia1.html",
    "title": "Guía 1",
    "section": "",
    "text": "El objetivo de estos ejercicios es reconocer, crear y hacer operaciones simples con los 5 tipos de objetos básicos de R:\n\ncharacter\nnumeric (números reales)\ninteger\ncomplex\nlogical (True/False)\n\nTambién familiarizarse con la consola de R, con matrices y con operaciones lógicas.\n1.1 Realizar las siguientes operaciones básicas en la consola\n\n2+2\na <- 2\nb <- 5\na**3\n16 %% 5 (probar con otros números para entender qué significa)\n2*a**2+0.5*b+(a+b)/2\nasignar el resultado anterior a la variable c\nimprimir el contenido de c en la consola (corriendo c o print(c)). ¿Ven un [1] delante del valor de c? Esto indica que es un vector.\n\n1.2 Interpretar las siguientes operaciones lógicas y predecir el resultado antes de probar en la consola.\n\na <- TRUE\nb <- FALSE\na == b\na || b\na == !b\n\n1.3. Antes de probar en la consola, piense que van a dar estas operaciones:\n\na <- 3\nb <- 4\na > b\na <= b\na != b\nx <- 2\n(x > a) && (10*x>b) || !(b/a>x)\n\n1.4 Los vectores en R se crean con la función c(). Por ejemplo c(2,-1) es un vector de clase numeric que tiene dos elementos, el 2 y el -1. Se puede comprobar usando la función class() así: class(c(2,-1)). Crear 5 vectores de 2 componentes de las siguiente clases básicas: character, numeric, integer, complex y logical (True/False).\n1.5. ¿Qué sucede cuando se realizan las siguientes operaciones que mezclan variables de distinta clase? ¿Por qué les parece que pasa? (usar class() para investigar el tipo de dato de los objetos)\n\nnum_char <- c(1, 2, 3, \"a\")\nnum_logical <- c(1, 2, 3, TRUE)\nchar_logical <- c(\"a\", \"b\", \"c\", TRUE)\ntramposo <- c(1, 2, 3, \"4\")\n\n1.6. Realizar las siguientes operaciones en la consola, ver el output de cada operación y escribir una frase explicando qué hace cada una.\n\nalturas_cm <- c(180, 178, 154, 202)\nfrutas <- c(\"banana\", \"pera\", \"durazno\")\nlength(alturas_cm)\nlength(frutas)\nfrutas <- c(frutas, \"uva\")\nfrutas <- c(\"naranja\", frutas)\nbajitos <- (alturas_cm < 165)\nclass(bajitos)\n1:10\n21:30\n\n1.7. Explorar estas distintas formas de extraer información del vector c(\"banana\", \"pera\", \"durazno\", \"anana\"). Primero crear el vector en la consola y asignarlo al vector frutas. Luego correr cada caso en la consola y explicar en pocas palabras qué es lo que sucede.\n\nfrutas[2]\nfrutas[c(1,4)]\nfrutas[c(1,4,1,1,2)]\nfrutas %in% c(\"ciruela\", \"frutilla\", \"pera\", \"mandarina\")\nfrutas[ frutas %in% c(\"ciruela\", \"frutilla\", \"pera\", \"mandarina\") ]\n\n1.8. ¿Por qué da error la línea 4 de esta secuencia?\n\ndatos <- c(\"banana\", 2, \"pera\", 5, \"durazno\", 0)\ndatos[2] \ndatos[4]\ndatos[2] + datos[4]\n\n1.9. Explorar distintas formas de extraer información del vector alturas_cm definido en el ejercicio 1.6. Escribir una frase explicando qué hace cada una. ¿Por qué la última retorna numeric(0)?\n\nalturas_cm[c(TRUE, FALSE, TRUE, TRUE)]\nalturas_cm[alturas_cm >= 180]\nalturas_cm[alturas_cm >= 180 & alturas_cm < 200]\nalturas_cm[alturas_cm >= 160 & alturas_cm == 195]\n\n1.10. Las matrices en R son vectores con estructura en 2D. Por ejemplo, se pueden crear de esta forma\n\nm <- matrix(1:6, nrow = 2, ncol = 3)\n\nUsar dim(m) para averiguar el atributo “dimesión” (número de filas y columnas) de la matriz. Obtener el elemento que está en la fila 2 y columna 1 usando corchetes: m[fila,columna]. Obtener la primera fila completa dejando en blanco la columna: m[fila,].\n1.11 ¿Qué sucede con m si corremos en la consola la operación dim(m) <- c(1, 6)?\n1.12 Construir una matriz de 2 columnas que en cada columna tenga los vectores x e y de abajo usando la función cbind() y otro que haga lo mismo pero con 2 filas usando la función rbind():\n\nx <- c(\"fruta\", \"asado\", \"bebida\")\ny <- c(\"si\", \"no\", \"si\")"
  },
  {
    "objectID": "guias/guia1.html#funciones",
    "href": "guias/guia1.html#funciones",
    "title": "Guía 1",
    "section": "2. Funciones",
    "text": "2. Funciones\nLas funciones son scripts de R “enlatados” que hacen una operación con un input (un número o una variable, por ejemplo) y devuelven un output. Los inputs van entre paréntedis y separados por una coma, si hay más de uno. Muchas funciones están disponibles en R-base cuando abrimos una sesión de R, class(), length() o c() que usamos en los ejercicios anteriores. El objetivo de estos ejercicios es familiarizarse con varias funciones básicas de R.\n2.1. Ejecutar estas operaciones en la consola para entender qué hacen las funciones sqrt(), round(), args(), ceiling() y floor():\n\nsqrt(81)\nround(3.14159, digits = 3)\nround(3.14159)\nround(digits = 2, 3.14159)\nargs(sample)\n?ceiling y ?floor\n\n2.2 Explorar las funciones max(), min(), mean() y sort() aplicadas al vector alturas_cm del ejercicio 1.6. ¿Qué hace cada una?\n2.3 Usar las funciones which.min() y which.max() con el mismo vector de alturas. Interpretar qué hace cada una.\n2.4. Completar los blancos con distintos números para entender qué hacen las funciones seq() y rep(). Si hay dudas, ?rep y ?seq en la consola.\n\nseq(from = ___, to = ___, lenght.out = ___)\nrep(x = ___, times = ___)\n\n2.5 Reproducir estos usos de la función sample() en la consola e interpretar qué hace esta función.\n\nsample(x = c(\"frambuesa\", \"frutilla\"), size = 7, replace = TRUE )\nsample(x = c(0,1), size = 7, replace = TRUE )\ninventar otros 2 usos de la función sample().\n\n2.6 ¿Por qué da error esta operación?\n\nsample(x = c(-1,1), size = 3)\n\n2.7 Usar la función sum() para sumar los números del 1 al 100 inclusive.\n2.8 R está pensado para analizar datos, entonces tiene formas particulares de tratar datos faltantes. Explorar en la consola el output de estas líneas de código. ¿Qué significa na.rm = TRUE?\n\nn <- c(2, 4, 4, NA, 6)\nmean(n)\nmax(n)\nmean(n, na.rm = TRUE)\nmax(n, na.rm = TRUE)\n\n2.9 A partir de este vector de pesos en Kg de distintas personas:\n\npeso_kg <- c(63, 69, 60, 65, NA, 68, 61, 70, 61, 59, 64, 69, 63, 63, NA, 72, 65, 64, 70, 63, 65)\n\n\nConstruir otro vector que descarte los NA.\nUsar la función mean() para calcular el peso promedio.\nEscribir una línea código que calcule cuántas personas pesan más que 65 kg.\nEscribir una línea de código que calcule cuántas personas pesan 63 kg.\n\n2.10 Usar la función sample() para simular el resultado de tirar un dado.\n2.11 Simular el resultado de tirar 120 veces un dado y contar cuántas veces salió cada resultado. ¿Qué resultado esperás obtener? ¿Coincide el resultado con lo que esperabas? No hay una única forma de resolverlo. Ayuda: sum(___ == x) o averigue cómo se usa la función table().\n2.12 Usar la función sample() para simular el resultado de tirar una moneda cargada, cuya probabilidad de salir cara es 0.7. Ayuda: ver cómo el argumento prob en ?sample."
  },
  {
    "objectID": "guias/guia1.html#scripts",
    "href": "guias/guia1.html#scripts",
    "title": "Guía 1",
    "section": "3. Scripts",
    "text": "3. Scripts\nTrabajar en la consola no siempre es lo más conveniente. Lo ideal es escribir en el editor de RStudio un archivo .R (o bien un archivo RMarkdown como veremos más adelante).\n3.1 Crear un script de R que haga la siguientes tres operaciones y guardarlo en un archivo llamado TP1-01.R. Correrlo línea por línea.\n\nx1 <- 2  # defino la variable x1\nx2 <- 3  # defino la variable x2\ny <- x1 + 2*x2\ny\n\n3.2 Crear un script que contenga la resolución completa del ejercicio 2.9. Incluir el enunciado y comentarios en el código. Guardarlo en un archivo “.R”."
  },
  {
    "objectID": "guias/guia1.html#data-frames",
    "href": "guias/guia1.html#data-frames",
    "title": "Guía 1",
    "section": "4. Data frames",
    "text": "4. Data frames\nUn data frame es una representación de los datos en formato de tabla en la que cada columna son vectores del mismo tamaño. Como cada columna es un vector, cada columna puede contener datos de un único tipo (ejemplo: numeric, character, factor, logic, etc). Se pueden pensar como variables. Por ejemplo:\nd <-  data.frame(x = 1:5, y = letters[1:5], z = c(T,T,F,T,F))\n4.1. ¿Cuál es la clase del objeto d? ¿Cuál es la clase de cada uno de los vectores columna?\n4.2. Extraer el vector columna y usando $. Comparar con usar d[,2].\n4.3. Cargar el paquete de R gapminder usando library(gapminder). Si da error es posible que no esté instalado. En tal caso ejecutan install.packages(\"gapminder\") en la consola y luego si library(gapminder).\n4.4. ¿Qué variables tiene el dataset gapminder y de qué clase son? Ayuda: usar la función head(gapminder) y/o str(gapminder). Este dataset tiene formato tibble que a los efectos prácticos en este punto es exactamente igual que un data frame.\n4.5. ¿De cuántos países hay datos? Ayuda: averiguar qué hace la función unique().\n4.6 Explorar el tamaño del dataset gapminder usando las funciones dim(), nrow() y ncol().\n4.7 ¿Cuáles son las variables? Usar la función names().\n4.8 Extraer la información de Argentina, Uruguay y Chile y guardarla en un nuevo data frame gm.sur. ¿Cuántas filas tiene? ¿Cuál es el primero y el último año para el cuál existen datos de Argentina en gapminder?\n4.9 ¿Qué resulta de hacer gm.sur[,\"pop\"]? ¿Qué resulta de hacer gm.sur[,-(1:3)]? Explorar el contenido de este data frame en el visor de RStudio haciendo View(gm.sur)\n4.10 Las variables de clase “factor” (factores, o fct) son una clase especial que tiene R para trabajar con variables categóricas. Una vez que se crean, los factores sólo pueden contener un conjunto pre-definido de valores que se conocen como los niveles del factor. ¿Qué variables del dataset de gapminder son factores?\n4.11 Redefinir niveles. Supongamos que queremos cambiar la denominación del continente de Argentina a “América” (sin la s final). Prueben lo siguiente. ¿Qué pasó? ¿Por qué no funciona?\n\nclass(gm.sur$continent)\ngm.sur$continent <- \"America\"\nclass(gm.sur$continent)\n\nAhora prueben esto. ¿Entienden por qué funciona?\n\nlevels(gm.sur$continent) <- c(\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\")\nclass(gm.sur$continent)\nhead(gm.sur)\n\n4.12. Vamos a usar mucho “factores” a lo largo del curso, pero para que se den una idea, por ejemplo, los factores son muy útiles para codificar variables categóricas en gráficos. Vamos a ver esto bastante a lo largo de las clases, pero para que vean una aplicación simple, corran estas líneas usando el paquete (que vamos a ver en las próximas clases) ggplot2.\n\nlibrary(ggplot2)\n\nggplot(data = gm.sur, \n       mapping = aes(x = year, y = pop, col = country)) +\n  geom_point(size = 3) +\n  theme_classic()\n\nAhora corran lo siguiente. ¿En qué difiere del anterior? ¿Pueden intuir por qué tenemos ese resultado?\n\nggplot(data = gm.sur, \n       mapping = aes(x = year, y = pop, size = country)) +\n  geom_point() +\n  theme_classic()\n\n¿Y si reemplazan size por shape dentro de aes(...)?\n4.13. Cambien más cosas del código anterior y prueben el resultado. De hecho, cambiar cosas y ver qué pasa es una gran forma de aprender."
  },
  {
    "objectID": "slides/clase1.html#vacantes",
    "href": "slides/clase1.html#vacantes",
    "title": "Laboratorio de datos",
    "section": "Vacantes",
    "text": "Vacantes\n\n¿A todos los presentes les llegó un mail confirmando la vacante?\nSi no pueden cursar, avisen a la brevedad porque hay inscriptos en lista de espera."
  },
  {
    "objectID": "slides/clase1.html#estructura-de-la-materia",
    "href": "slides/clase1.html#estructura-de-la-materia",
    "title": "Laboratorio de datos",
    "section": "Estructura de la materia",
    "text": "Estructura de la materia\n\nTeórico-práctica\nLaboratorio 1103!\nR\nPara aprobar la materia es necesario:\n\nAsistir al ~80% de las clases (11 clases).\nTrabajar en clase.\nAprobar 2 TPs grupales (nota mayor o igual a 4).\nAprobar el parcial individual (nota mayor a 6).\n\nNota final = \\(0.6 \\times \\text{nota parcial} + 0.2 \\times \\text{nota TP1} + 0.2 \\times \\text{nota TP2} + x\\)\n\n\\[\nx = \\left\\{\\begin{aligned}\n          1 & \\text{ si el promedio de los TPs es mayor o igual a 8}\\\\\n          0 & \\text{ si el promedio de los TPs es menor a 8}\n        \\end{aligned}\\right.\n\\]"
  },
  {
    "objectID": "slides/clase1.html#docentes",
    "href": "slides/clase1.html#docentes",
    "title": "Laboratorio de datos",
    "section": "Docentes",
    "text": "Docentes\n\nDario Elías (ayudante de primera)\nYamila Alen (ayudante de primera)\nGuillermo Solovey (profesor)"
  },
  {
    "objectID": "slides/clase1.html#comunicación",
    "href": "slides/clase1.html#comunicación",
    "title": "Laboratorio de datos",
    "section": "Comunicación",
    "text": "Comunicación\n\nPágina de la materia: ldd2023.netlify.app\nListas de mail:\n\nldd2023-alu@googlegroups.com: los mails le llegan a TODOS: alumnos y docentes\nldd2023-doc@googlegroups.com: los mails le llegan SÓLO a los docentes (desde hoy a la tarde!)."
  },
  {
    "objectID": "slides/clase1.html#fecha-de-parcial",
    "href": "slides/clase1.html#fecha-de-parcial",
    "title": "Laboratorio de datos",
    "section": "Fecha de parcial",
    "text": "Fecha de parcial\n\nParcial. Viernes 17 de noviembre.\nRecuperatorio. Viernes 1 de diciembre.\nPor inconvenientes con las fechas completar a la brevedad este formulario y vemos de adelantarles la fecha."
  },
  {
    "objectID": "slides/clase1.html#programa-de-la-materia",
    "href": "slides/clase1.html#programa-de-la-materia",
    "title": "Laboratorio de datos",
    "section": "Programa de la materia",
    "text": "Programa de la materia\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfecha\n      tema\n      slides\n      tp\n    \n\n\n18/8\nIntroducción a la materia. Ciencia de datos. Tipos de preguntas. Introducción a R y RStudio | Charla Dátame.\n\n\n\n\n25/8\nEstadística descriptiva. Visualización. Gramática de gráficos.\n\n\n\n\n1/9\nAnálisis exploratorio de datos y comunicación.\n\n\n\n\n8/9\nTransformación de datos: datos ordenados, vectores, data frames. Unión de data frames.\n\n\n\n\n15/9\nProgramación en R: funciones, iteraciones | Charla Dátame.\n\n\n\n\n22/9\nReproducibilidad computacional. Comunicación e informes con RMarkdown/Quarto.\n\nPresentación TP1\n\n\n29/9\nIntroducción al modelado. Modelos supervisados y no supervisados. Regresión vs. clasificación. Trade-off sesgo-varianza. Modelo de regresión lineal simple.\n\nConsultas TP1\n\n\n6/10\nRegresión: regresión lineal múltiple y K-nearest neighbors.\n\nEnvío TP1 (límite: 5 de Oct, 23:59)\n\n\n13/10\nFeriado\n\n\n\n\n20/10\nClasificación: Árboles de decisión y K-nearest neighbors | Charla Dátame.\n\nDevolución TP1\n\n\n27/10\nHerramientas de validación de un\nmodelo. Métodos de resampleo. Muestras de testeo y entrenamiento.Métricas\n\nPresentación TP2\n\n\n3/11\nAprendizaje no supervisado. Métodos de clustering: K-means y clustering jerárquico.\n\nConsultas TP2\n\n\n10/11\nConsultas.\n\nEnvío TP2 (límite: 9 de Nov, 23:59)\n\n\n17/11\nParcial de 10 a 13hs en aula a confirmar | Charla Dátame.\n\n\n\n\n24/11\nEntrega de notas del parcial y TP2. Cierre\n\n\n\n\n1/12\nRecuperatorio del parcial, de 10 a 13hs en aula a confirmar.\n\nRe-entrega de TPs.\n\n\n8/12\nEntrega de notas del recuperatorio y de los TPs. Cierre."
  },
  {
    "objectID": "slides/clase1.html#material-de-estudio",
    "href": "slides/clase1.html#material-de-estudio",
    "title": "Laboratorio de datos",
    "section": "Material de estudio",
    "text": "Material de estudio\n\nlos slides de las clases son material didáctico.\nla bibliografía de referencia va a estar en las slides de cada clase.\ntraer cuaderno (no cuenten sólo con la computadora).\nno se queden únicamente con lo que hacen en clase. se requiere mucha práctica."
  },
  {
    "objectID": "slides/clase1.html#r-rstudio",
    "href": "slides/clase1.html#r-rstudio",
    "title": "Laboratorio de datos",
    "section": "R / RStudio",
    "text": "R / RStudio\n\nvamos a usar mucho R.\nla clase de hoy es una introducción para que se familiaricen."
  },
  {
    "objectID": "slides/clase1.html#rstudio",
    "href": "slides/clase1.html#rstudio",
    "title": "Laboratorio de datos",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/clase1.html#rstudio-1",
    "href": "slides/clase1.html#rstudio-1",
    "title": "Laboratorio de datos",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/clase1.html#rstudio-2",
    "href": "slides/clase1.html#rstudio-2",
    "title": "Laboratorio de datos",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/clase1.html#rstudio-3",
    "href": "slides/clase1.html#rstudio-3",
    "title": "Laboratorio de datos",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/clase1.html#rstudio-4",
    "href": "slides/clase1.html#rstudio-4",
    "title": "Laboratorio de datos",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/clase1.html#programa",
    "href": "slides/clase1.html#programa",
    "title": "Laboratorio de datos",
    "section": "Programa",
    "text": "Programa\nEn líneas generales:\n\nOrganización de datos.\nVisualización, descripción y análisis exploratorio de datos.\nModelado de datos (modelos explicativos y predictivos).\n Cronograma"
  },
  {
    "objectID": "slides/clase1.html#ciencia-de-datos",
    "href": "slides/clase1.html#ciencia-de-datos",
    "title": "Laboratorio de datos",
    "section": "Ciencia de datos",
    "text": "Ciencia de datos\n\n“…allows you to turn raw data into understanding, insight, and knowledge” (Wickham, Çetinkaya-Rundel, and Grolemund). https://r4ds.hadley.nz/\n“…the process of formulating a quantitative question that can be answered with data, collecting and cleaning the data, analyzing the data, and communicating the answer to the question to a relevant audience” (Leek and Peng). http://jtleek.com/ads2020/\n“…the process of generating insight from data through reproducible and auditable processes” (Timbers, Campbell, and Lee). https://datasciencebook.ca/"
  },
  {
    "objectID": "slides/clase1.html#tipo-de-preguntas",
    "href": "slides/clase1.html#tipo-de-preguntas",
    "title": "Laboratorio de datos",
    "section": "Tipo de preguntas",
    "text": "Tipo de preguntas\n\nSe define por las preguntas que se hace: es la ciencia que usa datos para describir, explicar y predecir.\nNo se define por las técnicas: no es la ciencia que usa deep learning.\n\n\n\ndescriptiva: resumir caracteristicas de un data set. sin interpretación, como atributos de los datos (LdD + IECS).\nexploratorias: buscar patrones, tendencias, relaciones entre variables. sirve para generar hipótesis (LdD)\ninferenciales: evaluar hipotesis, respecto a un patron encontrado en un análisis exploratorio (lo van a ver en IECS).\npredictivas: adivinar qué va a suceder, sin importar la causa (LdD,…).\ncausales: ¿cambiar una variable, cambia el valor de otra variable? ej.: test A/B\nmecanisticas: ¿cómo ocurre?\n\n\n\nThe art of data science"
  },
  {
    "objectID": "slides/clase1.html#referencias",
    "href": "slides/clase1.html#referencias",
    "title": "Laboratorio de datos",
    "section": "Referencias",
    "text": "Referencias\n\nThe art of data science"
  },
  {
    "objectID": "guias/guia1.html#referencias",
    "href": "guias/guia1.html#referencias",
    "title": "Guía 1",
    "section": "Referencias",
    "text": "Referencias\n\nR Programming for Data Science. Roger D. Peng.\nR for Data Science (2e). Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund.\nR para Ciencia de Datos. Hadley Wickham y Garrett Grolemund.\nLearning statistics with R. Danielle Navarro.\nR para profesionales de los datos: una introducción. Carlos J. Gil Bellosta.\nData Science. A First Introduction. Tiffany Timbers, Trevor Campbell, and Melissa Lee."
  },
  {
    "objectID": "slides/clase1.html#qué-es-la-ciencia-de-datos",
    "href": "slides/clase1.html#qué-es-la-ciencia-de-datos",
    "title": "Laboratorio de datos",
    "section": "¿Qué es la ciencia de datos?",
    "text": "¿Qué es la ciencia de datos?\n\n“…allows you to turn raw data into understanding, insight, and knowledge” (Wickham, Çetinkaya-Rundel, and Grolemund). https://r4ds.hadley.nz/\n“…the process of formulating a quantitative question that can be answered with data, collecting and cleaning the data, analyzing the data, and communicating the answer to the question to a relevant audience” (Leek and Peng). http://jtleek.com/ads2020/\n“…the process of generating insight from data through reproducible and auditable processes” (Timbers, Campbell, and Lee). https://datasciencebook.ca/\n\nTarea para el 25/8: leer el capítulo 1 de Telling Stories with data"
  },
  {
    "objectID": "slides/clase1.html#preguntas-para-pensar-en-grupos",
    "href": "slides/clase1.html#preguntas-para-pensar-en-grupos",
    "title": "Laboratorio de datos",
    "section": "Preguntas… (para pensar en grupos)",
    "text": "Preguntas… (para pensar en grupos)\n\nEJEMPLO"
  },
  {
    "objectID": "slides/clase1.html#qué-es-la-ciencia-de-datos-1",
    "href": "slides/clase1.html#qué-es-la-ciencia-de-datos-1",
    "title": "Laboratorio de datos",
    "section": "¿Qué es la ciencia de datos?",
    "text": "¿Qué es la ciencia de datos?\n\nSe define por las preguntas que se hace: es la ciencia que usa datos para describir, explicar y predecir.\nNo se define por las técnicas: no es la ciencia que usa deep learning."
  },
  {
    "objectID": "slides/clase1.html#qué-es-la-ciencia-de-datos-2",
    "href": "slides/clase1.html#qué-es-la-ciencia-de-datos-2",
    "title": "Laboratorio de datos",
    "section": "¿Qué es la ciencia de datos?",
    "text": "¿Qué es la ciencia de datos?\nTaxonomía de preguntas:\n\n\ndescriptiva: resumir caracteristicas de un data set. sin interpretación, como atributos de los datos (LdD + IECS).\nexploratorias: buscar patrones, tendencias, relaciones entre variables. sirve para generar hipótesis (LdD)\ninferenciales: evaluar hipotesis, respecto a un patron encontrado en un análisis exploratorio (lo van a ver en IECS).\npredictivas: adivinar qué va a suceder, sin importar la causa (LdD,…).\ncausales: ¿cambiar una variable, cambia el valor de otra variable? ej.: test A/B\nmecanisticas: ¿cómo ocurre?\nTarea para el 25/8: leer el capítulo 1-3 de The art of data science"
  },
  {
    "objectID": "slides/clase2.html#docentes",
    "href": "slides/clase2.html#docentes",
    "title": "Laboratorio de datos",
    "section": "Docentes",
    "text": "Docentes\n\n\n\n\n\n\nPay Attention\n\n\nUsing callouts is an effective way to highlight content that your reader give special consideration or attention."
  },
  {
    "objectID": "slides/clase2.html#estadística-descriptiva",
    "href": "slides/clase2.html#estadística-descriptiva",
    "title": "Laboratorio de datos",
    "section": "Estadística descriptiva",
    "text": "Estadística descriptiva\n\n\n\n\n\n\nResumir"
  },
  {
    "objectID": "slides/clase2.html#datos",
    "href": "slides/clase2.html#datos",
    "title": "Laboratorio de datos",
    "section": "Datos:",
    "text": "Datos:"
  },
  {
    "objectID": "slides/clase2.html#tres-ideas",
    "href": "slides/clase2.html#tres-ideas",
    "title": "Laboratorio de datos",
    "section": "Tres ideas",
    "text": "Tres ideas\n\ndistribución\nmedidas de centralidad\nmedidas de variabilidad"
  },
  {
    "objectID": "slides/clase2.html#medidas-de-centralidad",
    "href": "slides/clase2.html#medidas-de-centralidad",
    "title": "Laboratorio de datos",
    "section": "Medidas de centralidad",
    "text": "Medidas de centralidad\n\nresumir en un único número!\nModa\n\n1 1 1 2 3 4 5 6\n1 1 1 2 2 2 5 6\n¿es buena la moda? 1 1 2 3 4 6 7 9\n\n\n\nMediana\n\n1 3 4 5 6 7 9\n1 5 4 3 6 7 9\n1 2 3 4 5 6\n¿es buena la mediana? 1 2 3 4 4 4 5 6 6 6 7 7 1000\n\n\n\nMedia (promedio)\n\n\\(\\frac{1}{n}\\sum_i^n x_i\\)\n3 7 9 2 6"
  },
  {
    "objectID": "slides/clase2.html#medidas-de-centralidad-1",
    "href": "slides/clase2.html#medidas-de-centralidad-1",
    "title": "Laboratorio de datos",
    "section": "Medidas de centralidad",
    "text": "Medidas de centralidad\n\nejemplo de histograma con media, mediana y moda.\nla mediana y la moda son insensibles a valores atípicos (por ejemplo valores extremos que son poco frecuentes0)."
  },
  {
    "objectID": "slides/clase2.html#medidas-de-variabilidad",
    "href": "slides/clase2.html#medidas-de-variabilidad",
    "title": "Laboratorio de datos",
    "section": "Medidas de variabilidad",
    "text": "Medidas de variabilidad\n\nmostrar que el promedio de distancias abs no sirve\nvarianza: sum de sq diff / n\nThe mean is the balancing point in the data\nsd = sqrt(varianza)"
  },
  {
    "objectID": "slides/clase2.html#anscombe",
    "href": "slides/clase2.html#anscombe",
    "title": "Laboratorio de datos",
    "section": "Anscombe",
    "text": "Anscombe"
  },
  {
    "objectID": "slides/clase2.html#cuarteto-de-anscombe",
    "href": "slides/clase2.html#cuarteto-de-anscombe",
    "title": "Laboratorio de datos",
    "section": "Cuarteto de Anscombe",
    "text": "Cuarteto de Anscombe\n\n\nPlot\nResumen\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n quartet \n    mean_x \n    var_x \n    mean_y \n    var_y \n  \n\n\n 1 \n    9 \n    11 \n    7.5 \n    4.13 \n  \n\n 2 \n    9 \n    11 \n    7.5 \n    4.13 \n  \n\n 3 \n    9 \n    11 \n    7.5 \n    4.12 \n  \n\n 4 \n    9 \n    11 \n    7.5 \n    4.12"
  },
  {
    "objectID": "slides/clase2.html#cuarteto-de-anscombe-1",
    "href": "slides/clase2.html#cuarteto-de-anscombe-1",
    "title": "Laboratorio de datos",
    "section": "Cuarteto de Anscombe",
    "text": "Cuarteto de Anscombe\n\n\n\n\n\n\nImportant\n\n\nThis is an example of a ‘folded’ caution callout that can be expanded by the user. You can use collapse=\"true\" to collapse it by default or collapse=\"false\" to make a collapsible callout that is expanded by default."
  },
  {
    "objectID": "guias/guia2.html#medidas-de-centralidad-y-variabilidad",
    "href": "guias/guia2.html#medidas-de-centralidad-y-variabilidad",
    "title": "Guía 2",
    "section": "1. Medidas de centralidad y variabilidad",
    "text": "1. Medidas de centralidad y variabilidad\n1.0 Definir media, mediana y moda. ¿Qué tiene que pasar para que un conjunto de números tenga dos modas?\n1.1 Definir desvío estándar. ¿Por qué es una medida de variabilidad y por qué la diferencia en el numerador está elevada al cuadraro?\n1.1 Cargar, como en la guía 1, el dataset gapminder del paquete homónimo y calcular la media y mediana de la expectativa de vida en 1952 (lifeExp).\n1.2 Paréntesis: R no tiene una función para calcular la moda. En este ejercicio vamos a crear esa función (de paso aprenden cómo crear funciones en R). - Escriban la definición de la moda. - Si yo les paso un vector, qué pasos necesitaría hacer para calcular la moda. -\n1.3. Generar datos con rnorm(100), guardarlos en un vector y calular la media, mediana y moda\n1.4 Calcular el rango, varianza y el desvío estandar de la expectativa de vida (lifeExp) tomando el dataset gapminder para el año 1952.\n1.5 Calcular la media, varianza y desvío estándar de la expectativa de vida para cada uno de los años reportados en el dataset. Para esto se puede hacer una función. Dar un ejemplo para completar.\n1.6 Calcular la media, la mínima, la máxima y el desvío estándar de la expectativa de vida en cada continente en 1952 y en 2007.\n1.7 Crear un Rmd"
  },
  {
    "objectID": "guias/guia2.html#correlaciones",
    "href": "guias/guia2.html#correlaciones",
    "title": "Guía 2",
    "section": "3. Correlaciones",
    "text": "3. Correlaciones\n3.1 Ejercicios básicos de correlación.\n3.2 Para qué sirve? Dar datos y descripciones posibles para elegir.\n3.3 Jugar a guess the correlation.\n3.4 Generar los datos de McElreath y estimar."
  },
  {
    "objectID": "guias/guia2.html#tipos-de-gráficos",
    "href": "guias/guia2.html#tipos-de-gráficos",
    "title": "Guía 2",
    "section": "1. Tipos de gráficos",
    "text": "1. Tipos de gráficos\npara que sirve cada uno\nTengo datos de una encuesta realizada en distintas provincias de Argentina y quiero saber cuántas personas respondieron a la encuesta en cada provincia. ¿Hago un gráfico de líneas, de dispersión (scatter), histograma o un gráfico de barras (bar plot)? Realizar a mano en tu cuaderno cómo esperás que se vea el gráfico.\nEstás estudiando la relación entre altura y peso de las personas. Tenés un data-set que tiene como variables la edad, sexo y peso de cada persona. Si querés describir estas variables por separado, ¿qué gráfico harías para cada una? ¿y si querés visualizar la relación entre peso y altura? Realizar a mano en tu cuaderno cómo esperás que se vea el gráfico.\nRealizar un gráfico de barras que muestre la cantidad de países hay en cada continente según los datos de gapminder."
  },
  {
    "objectID": "guias/guia2.html#corregir-un-grafico-ya-hecho",
    "href": "guias/guia2.html#corregir-un-grafico-ya-hecho",
    "title": "Guía 2",
    "section": "2. Corregir un grafico ya hecho",
    "text": "2. Corregir un grafico ya hecho\nDar un ggplot y la tarea es imitarlo\nQueremos investigar cómo varía la expectativa de vida entre los continentes. Para eso queremos un gráfico como el siguiente\n\n#! echo: true\nplot_q2 <- ggplot(<arguments>) +\n  geom_<type>(<arguments>) +\n  ...\n\nplot_q2\n\nLooking at the previous plot, which continent has the highest median life expectancy? Which part of the boxplot can we determine this from?\n\n#! echo: false\nggplot(data = gapminder, aes(x = year, y = lifeExp)) +\n         geom_line(aes(group = country), color = \"gray70\") +\n  geom_smooth(aes(group = continent), method = \"lm\") +\n  facet_wrap(~ continent)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "guias/guia2.html#anscombe",
    "href": "guias/guia2.html#anscombe",
    "title": "Guía 2",
    "section": "3. Anscombe",
    "text": "3. Anscombe"
  },
  {
    "objectID": "guias/guia2-template.html",
    "href": "guias/guia2-template.html",
    "title": "Guía 2 - Template para estadística descriptiva",
    "section": "",
    "text": "media: esta es mi definición de media con palabras. también lo puedo escribir en Latex:\n\n\\[ \\text{media}(x) = \\frac{1}{N} \\sum_{i=1}^N  x_i\\]\n\n# así es como lo puedo calcular en R\nx <- c(3,4,2,5,6)\nm1 <- mean(x)\n# lo calculo de otra forma para comprobar\nm2 <- sum(x)/length(x)\nprint(c(m1, m2))\n\n[1] 4 4\n\n\n\nmediana: mi definición de mediana\n\nEn R:\n\n# así es como lo puedo calcular en R\nx <- c(3,4,2,5,6)\nprint(median(x))\n\n[1] 4\n\n\n\nmoda: mi definición de moda\n\n\nx <- c(\"mandarina\", \"mandarina\", \"pera\", \"pera\", \"pera\", \"tomate\")\nt <- table(x)\nnames(___)"
  },
  {
    "objectID": "guias/guia2.html#variables-categóricas-y-numérica",
    "href": "guias/guia2.html#variables-categóricas-y-numérica",
    "title": "Guía 2",
    "section": "1. Variables categóricas y numérica",
    "text": "1. Variables categóricas y numérica\n1.1 Dar tres ejemplos de variables categóricas y numéricas.\n1.2 En el dataset gapminder del paquete homónimo (que ya trabajaron en la guía 1), una de las variables es el producto bruto per capita (gdpPercap). ¿Es una variable categórica (nominal u ordinal) o numérica (discreta o contínua)?\n1.3 Supongamos que definimos una nueva variable que puede tomar los siguientes tres valores:\n\\[\n\\begin{equation}\n  f(x)=\\begin{cases}\n    1, & \\text{if $x<0$}.\\\\\n    0, & \\text{otherwise}.\n  \\end{cases}\n\\end{equation}\n\\]"
  },
  {
    "objectID": "guias/guia2.html#medidas-de-posición-y-dispersión",
    "href": "guias/guia2.html#medidas-de-posición-y-dispersión",
    "title": "Guía 2",
    "section": "2. Medidas de posición y dispersión",
    "text": "2. Medidas de posición y dispersión\n2.1 Definir media, mediana y moda. ¿Qué tiene que pasar para que existan dos modas?\n2.2 R no tiene una función para calcular la moda. Escribir una función de R que calcule la moda de una muestra de datos de variable categórica y probarla con el vector colores y con el variable continent del dataset gapminder. Ayuda: Usar las funciones table y which.max().\n\nmi.moda <- function(x){\n  __ COMPLETAR ACÁ __\n  return(output)\n}\n\n# verifico que funciona\ncolores <- c('blue', 'red', 'green', 'red', 'black', 'yellow','blue','blue')\nmi.moda(colores)\n\n2.3 Calcular la media y mediana de la expectativa de vida entre países en 1952 usando los datos de gapminder (variable: lifeExp).\n2.4 Definir desvío estándar. ¿Por qué la diferencia en el numerador está elevada al cuadrado? Escribir una función de R que calcule el desvío estándar.\n2.5 Calcular el rango, varianza y el desvío estandar de la expectativa de vida (lifeExp) entre países tomando sólo el dataset gapminder para el año 1952. Comparar el resultado de usar la función creada en 2.4 con sd()de R-base.\n2.6 Extra: Guardar este archivo Quarto (.qmd) y abrirlo en RStudio. Completar lo que falta. AGREGAR LINK A GITHUB"
  },
  {
    "objectID": "guias/guia2.html#variables-categóricas-y-numéricas",
    "href": "guias/guia2.html#variables-categóricas-y-numéricas",
    "title": "Guía 2",
    "section": "1. Variables categóricas y numéricas",
    "text": "1. Variables categóricas y numéricas\n1.1 Dar tres ejemplos de variables categóricas y numéricas.\n1.2 En el dataset gapminder del paquete homónimo (que ya trabajaron en la guía 1), una de las variables es el producto bruto per capita de los países (gdpPercap). ¿Es una variable categórica (nominal u ordinal) o numérica (discreta o contínua)?\n1.3 Supongamos que definimos una nueva variable que puede tomar los siguientes valores:\n\\[\n\\begin{equation}\n  I.gdp = \\begin{cases}\n    0, & \\text{si gdpPercap $< 1600$}.\\\\\n    1, & \\text{si $1600 \\le $ gdpPercap $ < 6600$}.\\\\\n    2, & \\text{en otro caso}.\n  \\end{cases}\n\\end{equation}\n\\]\n¿La nueva variable \\(I.gdp\\) es categórica (nominal u ordinal) o numérica (discreta o contínua)? ¿Cambia la respuesta si la variable \\(I.gdp\\) toma valores “bajo”, “medio” y “alto” en lugar de 0, 1, 2?\n1.4 Calcular la proporción de países en cada continente usando la función prop.table() y la función table(). Buscar en la ayuda de RStudio cuál es el argumento de la función prop.table().\n1.5 Crear una variable \\(I\\) que valga 1 si gdpPercap es mayor que 2000 dólares y 0 si no lo es. Luego crear una tabla de 2 filas y 5 columnas que calcule la cantidad de países donde \\(I=\\{0,1\\}\\) en cada continente. Usar la función table() apropiadamente.\n1.6 Convertir el vector colores a factor y comprobar que funcionó usando la función class(). Verificar las categorías creadas usando la función levels().\n\ncolores <- c('blue', 'red', 'green', 'red', 'black', 'yellow','blue','blue')"
  },
  {
    "objectID": "guias/guia2.html#referencias",
    "href": "guias/guia2.html#referencias",
    "title": "Guía 2",
    "section": "Referencias",
    "text": "Referencias\n\nEstadística descriptiva:\n\nCap. 2 de Answering questions with data. Matthew J. C. Crump, Danielle J. Navarro, and Jeffrey Suzuki.\n\n\n\nVisualización de datos:\n\nCap. 2 de R for Data Science (2e). Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund.\nCap. 4 de Data Science. A First Introduction. Tiffany Timbers, Trevor Campbell, and Melissa Lee."
  },
  {
    "objectID": "guias/guia2.html#estadística-descriptiva",
    "href": "guias/guia2.html#estadística-descriptiva",
    "title": "Guía 2",
    "section": "Estadística descriptiva:",
    "text": "Estadística descriptiva:\n\nCap. 2 de Answering questions with data. Matthew J. C. Crump, Danielle J. Navarro, and Jeffrey Suzuki."
  },
  {
    "objectID": "guias/guia2.html#visualización-de-datos-1",
    "href": "guias/guia2.html#visualización-de-datos-1",
    "title": "Guía 2",
    "section": "Visualización de datos:",
    "text": "Visualización de datos:\n\nCap. 2 de R for Data Science (2e). Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund.\nCap. 4 de Data Science. A First Introduction. Tiffany Timbers, Trevor Campbell, and Melissa Lee."
  },
  {
    "objectID": "slides/clase3.html#datos",
    "href": "slides/clase3.html#datos",
    "title": "Laboratorio de datos",
    "section": "Datos:",
    "text": "Datos:\n\n\n\n\n\n\n\nNombre\n      ¿qué muestra?\n      objeto geométrico\n      nota\n    \n\n\nscatter (dispersión)\nrelación entre dos variables numéricas\ngeom_point()\n\n\n\nlínea\nrelación entre dos variables numéricas\ngeom_line()\nse usa cuando la variable del eje x tiene un orden (por ejemplo, tiempo)\n\n\nhistograma\ndistribución de una variable numérica\ngeom_histogram()\ncombinado con un faceteado muestra la distribución de una variable numérica desagregada por el valor de otra variable\n\n\nboxplot\ndistribución de una variable numérica (puede desagregarse por el valor de otra variable)\ngeom_boxplot()\n\n\n\nbarplot\ndistribución de una variable categórica\ngeom_bar() cuando ya no hecho el conteo, geom_col() cuando el conteo está hecho\nStacked, side-by-side, and faceted barplots show the joint distribution of 2 categorical variables"
  },
  {
    "objectID": "slides/clase3.html#tipos-de-variables",
    "href": "slides/clase3.html#tipos-de-variables",
    "title": "Laboratorio de datos",
    "section": "Tipos de variables",
    "text": "Tipos de variables\n\n\n\n\n\n\n\n  \n  \n\nNombre\n      ¿qué muestra?\n      objeto geométrico\n      nota\n    \n\n\nscatter (dispersión)\nrelación entre dos variables numéricas\ngeom_point()\n\n\n\nlínea\nrelación entre dos variables numéricas\ngeom_line()\nse usa cuando la variable del eje x tiene un orden (por ejemplo, tiempo)\n\n\nhistograma\ndistribución de una variable numérica\ngeom_histogram()\ncombinado con un faceteado muestra la distribución de una variable numérica desagregada por el valor de otra variable\n\n\nboxplot\ndistribución de una variable numérica (puede desagregarse por el valor de otra variable)\ngeom_boxplot()\n\n\n\nbarplot\ndistribución de una variable categórica\ngeom_bar() cuando ya no hecho el conteo, geom_col() cuando el conteo está hecho\nStacked, side-by-side, and faceted barplots show the joint distribution of 2 categorical variables"
  },
  {
    "objectID": "slides/clase3.html#geom_point",
    "href": "slides/clase3.html#geom_point",
    "title": "Laboratorio de datos",
    "section": "geom_point()",
    "text": "geom_point()\n\n\n\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point() + \n  theme_classic()"
  },
  {
    "objectID": "slides/clase3.html#geom_point-1",
    "href": "slides/clase3.html#geom_point-1",
    "title": "Laboratorio de datos",
    "section": "geom_point()",
    "text": "geom_point()\n\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point() + \n  theme_classic()"
  },
  {
    "objectID": "guias/guia3.html#estadística-descriptiva",
    "href": "guias/guia3.html#estadística-descriptiva",
    "title": "Guía 3: Análisis exploratorio de datos y visualización",
    "section": "Estadística descriptiva:",
    "text": "Estadística descriptiva:\n\nCap. 2 de Answering questions with data. Matthew J. C. Crump, Danielle J. Navarro, and Jeffrey Suzuki."
  },
  {
    "objectID": "guias/guia3.html#visualización-de-datos",
    "href": "guias/guia3.html#visualización-de-datos",
    "title": "Guía 3: Análisis exploratorio de datos y visualización",
    "section": "Visualización de datos:",
    "text": "Visualización de datos:\n\nCap. 2 de R for Data Science (2e). Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund.\nCap. 4 de Data Science. A First Introduction. Tiffany Timbers, Trevor Campbell, and Melissa Lee."
  },
  {
    "objectID": "guias/guia3.html",
    "href": "guias/guia3.html",
    "title": "Guía 3: Análisis exploratorio de datos y visualización",
    "section": "",
    "text": "1 Visualización\n1.1 ¿Qué tipo de gráfico usarían para contribuir a responder las preguntas planteadas en cada una de estas situaciones? Los tipos posibles son: histograma, bar plot, box plot, scatter plot y line plot.\n\nEn una encuesta, se pregunta por el máximo nivel educativo alcanzado por las personas (codificado por la variable “edu” que puede ser: “primario”, “secundario”, “universitario”). En el dataset, cada fila corresponde a un individuo y la columna de interés, “edu”. Se quiere entender la proporción de personas de cada nivel educativo que respondieron la encuesta.\nUn pediatra registra la altura de un bebe desde su nacimiento hasta cumplir un año y quiere graficar la evolución de la altura a lo largo de ese lapso.\nUn laboratorio de física midió en 1879 la velocidad de la luz 100 veces. No les da siempre igual por diversos motivos (errores de medición). Quieren ver cómo se distribuyen las mediciones.\nLas 100 mediciones del punto anterior corresponden a 5 experimentos de 20 mediciones cada uno. Ahora quieren visualizar variables de resumen de las mediciones desagregadas por experimento.\nA un grupo de 43 personas de Argentina se les preguntó quién creen que fue mejor jugador, Maradona o Messi. 20 respondieron que fue Maradona y 23 que fue Messi. Estos datos están volcados en un dataframe de dos columnas (“mejor” y “n”) por dos filas. Se quiere describir visualmente cuántas personas eligieron a cada jugador.\nPara investigar la relación entre las horas de sueño de una persona y el consumo de cafeína, se cuenta con un conjunto de datos que consta de respuestas de 100 personas a las siguientes preguntas: ¿cuántas horas duerme por la noche en promedio? ¿cuántos cafés toma por día en promedio?\n\n1.2 Poner en práctica las respuestas anteriores utilizando los siguientes datos. Es decir, crear un gráfico usando ggplot2. Piensen qué geom usarían en cada caso.\n\n# datos simulados del maximo nivel educativo de 100 personas\ndata.edu <- data.frame(id = 1:100, \n                       edu = sample(x = c(\"primario\",\"secundario\",\"universitario\"), \n                                    size = 100, \n                                    replace = T, \n                                    prob = c(0.1, 0.5, 0.4)))\n\n# datos de la preferencia por Maradona-Messi de 43 personas hipotéticas:\ndata.futbol <- data.frame(mejor = c(\"maradona\", \"messi\"),\n                          n     = c(20, 23))\n\n# datos de altura y mes de vida de un bebé.\ndata.alturas <- data.frame(mes = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),\n                           altura = c(50, 55, 57, 61, 62, 63, 64, 66, 68, 69, 71, 73, 75))\n\n# los datos del experimento que mide la velocidad de la luz estan en el data frame \n# \"morley\" que viene en R. ¿qué columnas tiene?\ndata.luz <- morley\n\n# datos de horas de sueño y consumo de café\ncafe = runif(100, min = 0, max = 3)\ndormir = rnorm(100, mean = 8) - cafe\ndata.cafe <- data.frame(cafe, dormir) \n\n1.3 Instalar el paquete “datos”. Abrir el data frame millas (View(millas)). Averiguar qué significan las variables corriendo ?millas en la consola. Hacer un gráfico del consumo en autopista en función de la cilindrada de los autos en el que cada observación (auto) está graficada con un triángulo rosa (Ayuda: buscar acá las especificaciones de ggplot2).\n1.4 ¿Por qué el siguiente código no resulta en un gráfico con puntos azules? Corregirlo para que funcione.\n\nggplot(millas) + \n  geom_point(aes(x = cilindrada, y = autopista, color = \"blue\"))\n\n1.5 ¿Qué pasa si uno mapea una “aesthetic()” a algo que no es una variable? Por ejemplo:\n\nggplot(millas, aes(x=cilindrada, y=autopista, fill = cilindrada < 5)) + \n  geom_point(shape = 24, size = 4) + theme_classic()\n\n1.6 Reproducir el siguiente grafico y agregarle título, subtítulo, caption. Cambiarle el label del eje x y del eje y.\n\n\n\n\n\n1.7 Hacer un histograma del consumo de los autos en ciudad y otro del consumo en autopista.\n1.8 Hacer un boxplot del consumo discriminado por tracción. Es decir, 3 boxplots. ¿Cuál es la tracción que menos consume?\n1.9 Reproducir los siguientes gráficos (notar que la variable categórica que se usa para graficar es traccion).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.10 ¿Por qué aparecen celdas vacías en este gráfico “facetado”?\n\nggplot(millas, aes(x = cilindrada, y = autopista)) + \n  geom_point() +\n  theme_bw() + \n  facet_grid(traccion~cilindros)\n\n1.11 Leer ?facet_wrap. ¿Qué hacen los argumentos nrow y ncol? Explorar qué otras opciones existen para el controlar el aspecto del “facetado”? ¿Por qué facet_grid() no tiene como argumentos a nrow y ncol?\n1.12 Considerar el siguiente código para generar un gráfico “faceteado”:\n\nggplot(millas, aes(x = cilindrada, y = autopista)) + \n  geom_point() +\n  theme_bw() + \n  facet_wrap(~clase, nrow = 2)\n\n\nGraficar la misma información pero mapeando la clase en el color.\n¿Qué ventajas y desventajas tiene el “faceteado” frente al aesthetic de color? ¿En qué circunstancias usarían una forma o la otra?\n\n1.13 Comparar estas dos formas de entender la relación entre el tamaño del motor (cilindrada) y la tracción del auto. ¿Qué hace el . y qué diferencia hay entre facet_grid(traccion ~ .) y facet_grid(. ~ traccion )? ¿Cuál de las dos formas facilita la comparación? ¿Qué les dice esto respecto de cuándo usar un faceteado sobre filas y sobre columnas?\n\nggplot(millas, aes(x = cilindrada)) + \n  geom_histogram() + \n  facet_grid(traccion ~ .) +\n  theme_bw()\n\nggplot(millas, aes(x = cilindrada)) + \n  geom_histogram() + \n  facet_grid(. ~ traccion) +\n  theme_bw()\n\n\n\n2. Análisis exploratorio\n2.1 Usando distintas estrategia de visualización, usar el dataset de pinguinos para explorar cuáles parecen ser las variables más importantes para predecir la masa corporal de los pinguinos. Reportar los gráficos que lo guian hacia esa conclusión.\n\n\nReferencias\n\nCap. 10-11 de R for Data Science (2e). Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund.\nCap. 4 de Data Science. A First Introduction. Tiffany Timbers, Trevor Campbell, and Melissa Lee."
  }
]